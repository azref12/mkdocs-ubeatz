{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"UBEATZ APP GUIDE","title":"Home"},{"location":"#ubeatz-app-guide","text":"","title":"UBEATZ APP GUIDE"},{"location":"check_version/","text":"Version Endpoint [GET] https://api-ubeatz.my.id/user/version/ This is the latest version of the ubeatz app Result { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": [ { \"id\": 1, \"version\": \"8.0.6\" } ] }","title":"Version"},{"location":"check_version/#version","text":"","title":"Version"},{"location":"check_version/#endpoint","text":"[GET] https://api-ubeatz.my.id/user/version/ This is the latest version of the ubeatz app","title":"Endpoint"},{"location":"check_version/#result","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": [ { \"id\": 1, \"version\": \"8.0.6\" } ] }","title":"Result"},{"location":"variablesettings/","text":"Variable Settings First step, you have to set a variable to access getplus. partner_id , getplus_id , signature , and timestamp variables can change at any time according to the response received from the OTP request, and used on requested requirements. And for partner_access_token , contains the token obtained from the previous partner_token response.","title":"Variable Settings"},{"location":"variablesettings/#variable-settings","text":"First step, you have to set a variable to access getplus. partner_id , getplus_id , signature , and timestamp variables can change at any time according to the response received from the OTP request, and used on requested requirements. And for partner_access_token , contains the token obtained from the previous partner_token response.","title":"Variable Settings"},{"location":"getplus/earnpoint/","text":"Earn Point / Sale Transaction Endpoint [POST] {{partner_service_url}}/partner/v1/201904/members/saletransaction [GET] {{base_url}}/mobile/v1/202001/utils/auth/partner-signature?PartnerID=(confidential data)&EncryptKey=55HCmiPaEkEEy20LWP8V9nGbvpkl6EY8USqDkaRRlrk=&PartnerCustomerAccountID=(confidential data)&GetPlusID=(confidential data)&TransactionValue=50000 to access earn point / sale transaction, use variables {{partner_access_token}} or you can use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then you choose one of the options above to be used as a token. Test and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Timestamp) { postman.setEnvironmentVariable(\"timestamp\", jsonData.Data.Timestamp); } if (jsonData.Data.Signature) { postman.setEnvironmentVariable(\"signature\", jsonData.Data.Signature); } if (jsonData.Data.PartnerID) { postman.setEnvironmentVariable(\"partner_id\", jsonData.Data.PartnerID); } if (jsonData.Data.PartnerCustomerAccountID) { postman.setEnvironmentVariable(\"partner_customer_id\", jsonData.Data.PartnerCustomerAccountID); } if (jsonData.Data.TransactionValue) { postman.setEnvironmentVariable(\"trans_value\", jsonData.Data.TransactionValue); } POST Method Use this json file with the format below to insert earn point. { \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\", \"Signature\": \"NgGMogyQeOxXgjW9E2giHFSivs13PphLVhB9m7CcUG8=\", \"Timestamp\": \"1661926366\", \"TransactionValue\": 100000, \"TransactionID\": \"GETPLUS/(confidential data)/(confidential data)\", \"TerminalID\": \"(confidential data)\" } for PartnerID , GetplusID , TransactionID and TerminalID is confidential data. So, use the previously obtained PartnerID , GetplusID , TransactionID and TerminalID . GET Method For GET method, add this in params . for PartnerID , GetplusID , and PartnerCustomerAccountID is confidential data. So, use the previously obtained PartnerID , GetplusID , and PartnerCustomerAccountID . Result { \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"LoyaltyPointsBalance\": 767500, \"TransactionID\": \"GETPLUS/(confidential data)/(confidential data)\", \"TransactionSet_RSN\": \"(confidential data)\" } } Error Condition if send same TransactionID 2 times. { \"ErrorCode\": \"20215\", \"ErrorDescription\": \"Duplicate Transaction ID\" } if send invalid/empty/expired token. { \"ErrorCode\": -12, \"ErrorDescription\": \"You are not authorize\" } if send invalid signature. { \"ErrorCode\": -14, \"ErrorDescription\": \"You are not authorize\" } if send invalid/empty/expired token and sent invalid signature. { \"ErrorCode\": -12, \"ErrorDescription\": \"You are not authorize\" }","title":"Earn Point"},{"location":"getplus/earnpoint/#earn-point-sale-transaction","text":"","title":"Earn Point / Sale Transaction"},{"location":"getplus/earnpoint/#endpoint","text":"[POST] {{partner_service_url}}/partner/v1/201904/members/saletransaction [GET] {{base_url}}/mobile/v1/202001/utils/auth/partner-signature?PartnerID=(confidential data)&EncryptKey=55HCmiPaEkEEy20LWP8V9nGbvpkl6EY8USqDkaRRlrk=&PartnerCustomerAccountID=(confidential data)&GetPlusID=(confidential data)&TransactionValue=50000 to access earn point / sale transaction, use variables {{partner_access_token}} or you can use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then you choose one of the options above to be used as a token.","title":"Endpoint"},{"location":"getplus/earnpoint/#test","text":"and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Timestamp) { postman.setEnvironmentVariable(\"timestamp\", jsonData.Data.Timestamp); } if (jsonData.Data.Signature) { postman.setEnvironmentVariable(\"signature\", jsonData.Data.Signature); } if (jsonData.Data.PartnerID) { postman.setEnvironmentVariable(\"partner_id\", jsonData.Data.PartnerID); } if (jsonData.Data.PartnerCustomerAccountID) { postman.setEnvironmentVariable(\"partner_customer_id\", jsonData.Data.PartnerCustomerAccountID); } if (jsonData.Data.TransactionValue) { postman.setEnvironmentVariable(\"trans_value\", jsonData.Data.TransactionValue); }","title":"Test"},{"location":"getplus/earnpoint/#post-method","text":"Use this json file with the format below to insert earn point. { \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\", \"Signature\": \"NgGMogyQeOxXgjW9E2giHFSivs13PphLVhB9m7CcUG8=\", \"Timestamp\": \"1661926366\", \"TransactionValue\": 100000, \"TransactionID\": \"GETPLUS/(confidential data)/(confidential data)\", \"TerminalID\": \"(confidential data)\" } for PartnerID , GetplusID , TransactionID and TerminalID is confidential data. So, use the previously obtained PartnerID , GetplusID , TransactionID and TerminalID .","title":"POST Method"},{"location":"getplus/earnpoint/#get-method","text":"For GET method, add this in params . for PartnerID , GetplusID , and PartnerCustomerAccountID is confidential data. So, use the previously obtained PartnerID , GetplusID , and PartnerCustomerAccountID .","title":"GET Method"},{"location":"getplus/earnpoint/#result","text":"{ \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"LoyaltyPointsBalance\": 767500, \"TransactionID\": \"GETPLUS/(confidential data)/(confidential data)\", \"TransactionSet_RSN\": \"(confidential data)\" } }","title":"Result"},{"location":"getplus/earnpoint/#error-condition","text":"if send same TransactionID 2 times. { \"ErrorCode\": \"20215\", \"ErrorDescription\": \"Duplicate Transaction ID\" } if send invalid/empty/expired token. { \"ErrorCode\": -12, \"ErrorDescription\": \"You are not authorize\" } if send invalid signature. { \"ErrorCode\": -14, \"ErrorDescription\": \"You are not authorize\" } if send invalid/empty/expired token and sent invalid signature. { \"ErrorCode\": -12, \"ErrorDescription\": \"You are not authorize\" }","title":"Error Condition"},{"location":"getplus/memberprofile/","text":"Member Profile Endpoint [GET] {{partner_service_url}}/partner/v1/201904/members/(confidential data) to get member profile, use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then paste token. Result { \"Data\": { \"AvailableBalance\": 767200, \"GivenName\": \"Gpi\", \"FamilyName\": \"Ubeatz\", \"EmailAddress\": \"(confidential data)\", \"PhoneNumber\": \"(confidential data)\", \"Program\": \"GPS\", \"MembershipNumber\": \"(confidential data)\" }, \"ErrorCode\": 0, \"ErrorDescription\": null } Error Condition If member non existing profile { \"ErrorCode\": 30201, \"ErrorDescription\": \"Member not found\" }","title":"Member Profile"},{"location":"getplus/memberprofile/#member-profile","text":"","title":"Member Profile"},{"location":"getplus/memberprofile/#endpoint","text":"[GET] {{partner_service_url}}/partner/v1/201904/members/(confidential data) to get member profile, use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then paste token.","title":"Endpoint"},{"location":"getplus/memberprofile/#result","text":"{ \"Data\": { \"AvailableBalance\": 767200, \"GivenName\": \"Gpi\", \"FamilyName\": \"Ubeatz\", \"EmailAddress\": \"(confidential data)\", \"PhoneNumber\": \"(confidential data)\", \"Program\": \"GPS\", \"MembershipNumber\": \"(confidential data)\" }, \"ErrorCode\": 0, \"ErrorDescription\": null }","title":"Result"},{"location":"getplus/memberprofile/#error-condition","text":"If member non existing profile { \"ErrorCode\": 30201, \"ErrorDescription\": \"Member not found\" }","title":"Error Condition"},{"location":"getplus/memberunlink/","text":"Member Unlink Endpoint [POST] {{partner_service_url}}/partner/v1/201904/members/unlink [GET] {{base_url}}/mobile/v1/202001/utils/auth/partner-signature?PartnerID=(confidential data)&EncryptKey=55HCmiPaEkEEy20LWP8V9nGbvpkl6EY8USqDkaRRlrk=&PartnerCustomerAccountID=(confidential data)&GetPlusID=(confidential data) to access unlink member, use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then paste token. Test and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Timestamp) { postman.setEnvironmentVariable(\"timestamp\", jsonData.Data.Timestamp); } if (jsonData.Data.Signature) { postman.setEnvironmentVariable(\"signature\", jsonData.Data.Signature); } if (jsonData.Data.PartnerID) { postman.setEnvironmentVariable(\"partner_id\", jsonData.Data.PartnerID); } if (jsonData.Data.PartnerCustomerAccountID) { postman.setEnvironmentVariable(\"partner_customer_id\", jsonData.Data.PartnerCustomerAccountID); } if (jsonData.Data.OTP) { postman.setEnvironmentVariable(\"otp_result\", jsonData.Data.OTP); } if (jsonData.Data.GetPlusID) { postman.setEnvironmentVariable(\"getplus_id\", jsonData.Data.GetPlusID); } POST Method Use this json file with the format below to insert unlink member. { \"PartnerCustomerAccountID\": \"(confidential data)\", \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\", \"Signature\": \"atAR2HIkfVCB+pU+T0QVewHMATCpdF+WgApEWJF/PH8=\", \"Timestamp\": \"1662111091\" } GET Method For GET method, add this in params . for PartnerCustomerAccountID , PartnerID and GetplusID is confidential data. So, use the previously obtained PartnerCustomerAccountID , Partner ID and Getplus ID . Result POST Method { \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"Timestamp\": 1664343761, \"Signature\": \"gPEHkwifUdCyiYTIfsL0cj7Lx7dSeBCBd1SbQyVLhe4=\", \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\" } } Result GET Method If unlink member success { \"ErrorCode\": 0, \"ErrorDescription\": \"\" } Error Condition If send link 2 times. { \"ErrorCode\": -1, \"ErrorDescription\": \"Account is already Linked\" } If input invalid id. { \"ErrorCode\": -14, \"ErrorDescription\": \"You are not authorize\" } If input invalid partner id / id. { \"ErrorCode\": -4, \"ErrorDescription\": \"Partner not found\" }","title":"Member Unlink"},{"location":"getplus/memberunlink/#member-unlink","text":"","title":"Member Unlink"},{"location":"getplus/memberunlink/#endpoint","text":"[POST] {{partner_service_url}}/partner/v1/201904/members/unlink [GET] {{base_url}}/mobile/v1/202001/utils/auth/partner-signature?PartnerID=(confidential data)&EncryptKey=55HCmiPaEkEEy20LWP8V9nGbvpkl6EY8USqDkaRRlrk=&PartnerCustomerAccountID=(confidential data)&GetPlusID=(confidential data) to access unlink member, use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then paste token.","title":"Endpoint"},{"location":"getplus/memberunlink/#test","text":"and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Timestamp) { postman.setEnvironmentVariable(\"timestamp\", jsonData.Data.Timestamp); } if (jsonData.Data.Signature) { postman.setEnvironmentVariable(\"signature\", jsonData.Data.Signature); } if (jsonData.Data.PartnerID) { postman.setEnvironmentVariable(\"partner_id\", jsonData.Data.PartnerID); } if (jsonData.Data.PartnerCustomerAccountID) { postman.setEnvironmentVariable(\"partner_customer_id\", jsonData.Data.PartnerCustomerAccountID); } if (jsonData.Data.OTP) { postman.setEnvironmentVariable(\"otp_result\", jsonData.Data.OTP); } if (jsonData.Data.GetPlusID) { postman.setEnvironmentVariable(\"getplus_id\", jsonData.Data.GetPlusID); }","title":"Test"},{"location":"getplus/memberunlink/#post-method","text":"Use this json file with the format below to insert unlink member. { \"PartnerCustomerAccountID\": \"(confidential data)\", \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\", \"Signature\": \"atAR2HIkfVCB+pU+T0QVewHMATCpdF+WgApEWJF/PH8=\", \"Timestamp\": \"1662111091\" }","title":"POST Method"},{"location":"getplus/memberunlink/#get-method","text":"For GET method, add this in params . for PartnerCustomerAccountID , PartnerID and GetplusID is confidential data. So, use the previously obtained PartnerCustomerAccountID , Partner ID and Getplus ID .","title":"GET Method"},{"location":"getplus/memberunlink/#result-post-method","text":"{ \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"Timestamp\": 1664343761, \"Signature\": \"gPEHkwifUdCyiYTIfsL0cj7Lx7dSeBCBd1SbQyVLhe4=\", \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\" } }","title":"Result POST Method"},{"location":"getplus/memberunlink/#result-get-method","text":"If unlink member success { \"ErrorCode\": 0, \"ErrorDescription\": \"\" }","title":"Result GET Method"},{"location":"getplus/memberunlink/#error-condition","text":"If send link 2 times. { \"ErrorCode\": -1, \"ErrorDescription\": \"Account is already Linked\" } If input invalid id. { \"ErrorCode\": -14, \"ErrorDescription\": \"You are not authorize\" } If input invalid partner id / id. { \"ErrorCode\": -4, \"ErrorDescription\": \"Partner not found\" }","title":"Error Condition"},{"location":"getplus/partnertoken/","text":"Partner Token Endpoint [POST] {{partner_service_url}}/security/v1/201904/oauth/token Before request OTP, you must login using username and password for the authorization process as basic authentication to get token. On postman select authorization next to params , then select Basic Auth . Then, select body x-www-urlencoded and add grant_type as key . Test and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Access_Token) { postman.setEnvironmentVariable(\"partner_access_token\", jsonData.Data.Access_Token); } Result { \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"TokenExpiry\": \"2023-01-04T06:26:19Z\", \"Access_Token\": \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJSc25BUFAiOiI0QzVCQzEzQi1GNUU4LTQ4RDMtODU4QS0zNUYwNEFFOTdDMkQiLCJSc25PUkciOiJDREY0OTIwNS1ENUZELTQwMDEtQTVGOC04RUM2MTQ0M0ZFMzUiLCJDbGllbnRJRCI6ImMxMGQ2YzM2LWU5ZTItNDc2NC04OTk1LTI2OThlYzM5ZWUzZiIsIkNsaWVudFNlY3JldCI6ImtDeVZ5Nno2N1pVaVlPNExzWmhMRWZYOW9JNmtMeCIsIklQQWRkcmVzcyI6IiIsIkNyZWF0ZWQiOiIyMDIzLTAxLTAzVDA2OjI2OjE5IiwiRXhwaXJlZCI6IjIwMjMtMDEtMDRUMDY6MjY6MTlaIiwiU2NvcGUiOiJQYXJ0bmVyIEludGVncmF0aW9uIiwiVG9rZW5SU04iOiIzZmU2ODc5NS1mMWQxLTQ0MWMtOWRhZi0xNWUyN2E3YWRhMDEiLCJQYXRoIjoiaHR0cHM6Ly9wYXJ0bmVycy1kZXYuZ3BpYXBpcy5jb20vc2VjdXJpdHkvdjEvMjAxOTA0L29hdXRoL3Rva2VuIiwiaWF0IjoxNjcyNzI3MTc5LCJleHAiOjE2NzI4MTM1NzksImp0aSI6ImoxS2Q0K091RnMxTU5GT1RHVnJxbDB0c2FqamYrNXp4Y3RXeGJBQVFCWEU9In0.g52PIuRdK3TMI9X0yX2ndKHvyEsXJdraTtOHjOrbyzw-slpIjHqexkBUUpM58g54NPm_eDOHgOSjFUrEHYTXeA\", \"Token_Type\": \"bearer\" } }","title":"Partner Token"},{"location":"getplus/partnertoken/#partner-token","text":"","title":"Partner Token"},{"location":"getplus/partnertoken/#endpoint","text":"[POST] {{partner_service_url}}/security/v1/201904/oauth/token Before request OTP, you must login using username and password for the authorization process as basic authentication to get token. On postman select authorization next to params , then select Basic Auth . Then, select body x-www-urlencoded and add grant_type as key .","title":"Endpoint"},{"location":"getplus/partnertoken/#test","text":"and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Access_Token) { postman.setEnvironmentVariable(\"partner_access_token\", jsonData.Data.Access_Token); }","title":"Test"},{"location":"getplus/partnertoken/#result","text":"{ \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"TokenExpiry\": \"2023-01-04T06:26:19Z\", \"Access_Token\": \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJSc25BUFAiOiI0QzVCQzEzQi1GNUU4LTQ4RDMtODU4QS0zNUYwNEFFOTdDMkQiLCJSc25PUkciOiJDREY0OTIwNS1ENUZELTQwMDEtQTVGOC04RUM2MTQ0M0ZFMzUiLCJDbGllbnRJRCI6ImMxMGQ2YzM2LWU5ZTItNDc2NC04OTk1LTI2OThlYzM5ZWUzZiIsIkNsaWVudFNlY3JldCI6ImtDeVZ5Nno2N1pVaVlPNExzWmhMRWZYOW9JNmtMeCIsIklQQWRkcmVzcyI6IiIsIkNyZWF0ZWQiOiIyMDIzLTAxLTAzVDA2OjI2OjE5IiwiRXhwaXJlZCI6IjIwMjMtMDEtMDRUMDY6MjY6MTlaIiwiU2NvcGUiOiJQYXJ0bmVyIEludGVncmF0aW9uIiwiVG9rZW5SU04iOiIzZmU2ODc5NS1mMWQxLTQ0MWMtOWRhZi0xNWUyN2E3YWRhMDEiLCJQYXRoIjoiaHR0cHM6Ly9wYXJ0bmVycy1kZXYuZ3BpYXBpcy5jb20vc2VjdXJpdHkvdjEvMjAxOTA0L29hdXRoL3Rva2VuIiwiaWF0IjoxNjcyNzI3MTc5LCJleHAiOjE2NzI4MTM1NzksImp0aSI6ImoxS2Q0K091RnMxTU5GT1RHVnJxbDB0c2FqamYrNXp4Y3RXeGJBQVFCWEU9In0.g52PIuRdK3TMI9X0yX2ndKHvyEsXJdraTtOHjOrbyzw-slpIjHqexkBUUpM58g54NPm_eDOHgOSjFUrEHYTXeA\", \"Token_Type\": \"bearer\" } }","title":"Result"},{"location":"getplus/redeempoint/","text":"Point Redeem Endpoint [POST] https://partners-dev.gpiapis.com/partner/v1/201904/members/pointredeem [GET] {{base_url}}/mobile/v1/202001/utils/auth/partner-signature?PartnerID=(confidential data)&EncryptKey=55HCmiPaEkEEy20LWP8V9nGbvpkl6EY8USqDkaRRlrk=&PartnerCustomerAccountID=(confidential data)&GetPlusID=(confidential data)&TransactionValue=1200 to access point redeem, use variables {{partner_access_token}} or you can use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then you choose one of the options above to be used as a token. Test and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Timestamp) { postman.setEnvironmentVariable(\"timestamp\", jsonData.Data.Timestamp); } if (jsonData.Data.Signature) { postman.setEnvironmentVariable(\"signature\", jsonData.Data.Signature); } if (jsonData.Data.PartnerID) { postman.setEnvironmentVariable(\"partner_id\", jsonData.Data.PartnerID); } if (jsonData.Data.PartnerCustomerAccountID) { postman.setEnvironmentVariable(\"partner_customer_id\", jsonData.Data.PartnerCustomerAccountID); } if (jsonData.Data.TransactionValue) { postman.setEnvironmentVariable(\"trans_value\", jsonData.Data.TransactionValue); } POST Method Use this json file with the format below to insert point redeem. { \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\", \"Signature\": \"5FrtmjEyJu4ofVIEQUZ/XBsymJxzzLE5CYtpCZH2s4Q=\", \"Timestamp\": \"1661859537\", \"TransactionValue\": 1200, \"TransactionID\": \"SO/(confidential data)/(confidential data)/(confidential data)\", \"TerminalID\": \"(confidential data)\" } for PartnerID , GetplusID , TransactionID and TerminalID is confidential data. So, use the previously obtained PartnerID , GetplusID , TransactionID and TerminalID . GET Method For GET method, add this in params . for PartnerID , PartnerCustomerAccountID and GetplusID is confidential data. So, use the previously obtained PartnerID , PartnerCustomerAccountID and GetplusID . Result { \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"LoyaltyPointsBalance\": 766300, \"TransactionID\": \"SO/(confidential data)/(confidential data)/(confidential data)\", \"TransactionSet_RSN\": \"(confidential data)\" } } Error Condition If send same TransactionID 2 times. { \"ErrorCode\": \"20215\", \"ErrorDescription\": \"Duplicate Transaction ID\" } If send invalid/empty/expired token. { \"ErrorCode\": -12, \"ErrorDescription\": \"You are not authorize\" } If send invalid signature. { \"ErrorCode\": -14, \"ErrorDescription\": \"You are not authorize\" } If send invalid/empty/expired token and sent invalid signature. { \"ErrorCode\": -12, \"ErrorDescription\": \"You are not authorize\" }","title":"Point Redeem"},{"location":"getplus/redeempoint/#point-redeem","text":"","title":"Point Redeem"},{"location":"getplus/redeempoint/#endpoint","text":"[POST] https://partners-dev.gpiapis.com/partner/v1/201904/members/pointredeem [GET] {{base_url}}/mobile/v1/202001/utils/auth/partner-signature?PartnerID=(confidential data)&EncryptKey=55HCmiPaEkEEy20LWP8V9nGbvpkl6EY8USqDkaRRlrk=&PartnerCustomerAccountID=(confidential data)&GetPlusID=(confidential data)&TransactionValue=1200 to access point redeem, use variables {{partner_access_token}} or you can use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then you choose one of the options above to be used as a token.","title":"Endpoint"},{"location":"getplus/redeempoint/#test","text":"and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Timestamp) { postman.setEnvironmentVariable(\"timestamp\", jsonData.Data.Timestamp); } if (jsonData.Data.Signature) { postman.setEnvironmentVariable(\"signature\", jsonData.Data.Signature); } if (jsonData.Data.PartnerID) { postman.setEnvironmentVariable(\"partner_id\", jsonData.Data.PartnerID); } if (jsonData.Data.PartnerCustomerAccountID) { postman.setEnvironmentVariable(\"partner_customer_id\", jsonData.Data.PartnerCustomerAccountID); } if (jsonData.Data.TransactionValue) { postman.setEnvironmentVariable(\"trans_value\", jsonData.Data.TransactionValue); }","title":"Test"},{"location":"getplus/redeempoint/#post-method","text":"Use this json file with the format below to insert point redeem. { \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\", \"Signature\": \"5FrtmjEyJu4ofVIEQUZ/XBsymJxzzLE5CYtpCZH2s4Q=\", \"Timestamp\": \"1661859537\", \"TransactionValue\": 1200, \"TransactionID\": \"SO/(confidential data)/(confidential data)/(confidential data)\", \"TerminalID\": \"(confidential data)\" } for PartnerID , GetplusID , TransactionID and TerminalID is confidential data. So, use the previously obtained PartnerID , GetplusID , TransactionID and TerminalID .","title":"POST Method"},{"location":"getplus/redeempoint/#get-method","text":"For GET method, add this in params . for PartnerID , PartnerCustomerAccountID and GetplusID is confidential data. So, use the previously obtained PartnerID , PartnerCustomerAccountID and GetplusID .","title":"GET Method"},{"location":"getplus/redeempoint/#result","text":"{ \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"LoyaltyPointsBalance\": 766300, \"TransactionID\": \"SO/(confidential data)/(confidential data)/(confidential data)\", \"TransactionSet_RSN\": \"(confidential data)\" } }","title":"Result"},{"location":"getplus/redeempoint/#error-condition","text":"If send same TransactionID 2 times. { \"ErrorCode\": \"20215\", \"ErrorDescription\": \"Duplicate Transaction ID\" } If send invalid/empty/expired token. { \"ErrorCode\": -12, \"ErrorDescription\": \"You are not authorize\" } If send invalid signature. { \"ErrorCode\": -14, \"ErrorDescription\": \"You are not authorize\" } If send invalid/empty/expired token and sent invalid signature. { \"ErrorCode\": -12, \"ErrorDescription\": \"You are not authorize\" }","title":"Error Condition"},{"location":"getplus/requestotp/","text":"Request OTP Endpoint [POST] {{partner_service_url}}/security/v1/201904/oauth/otp [GET] {{base_url}}/mobile/v1/202001/utils/auth/partner-signature?PartnerID=(confidential data)&EncryptKey=55HCmiPaEkEEy20LWP8V9nGbvpkl6EY8USqDkaRRlrk=&GetPlusID=(confidential data) to get OTP, use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then paste token. Test and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Timestamp) { postman.setEnvironmentVariable(\"timestamp\", jsonData.Data.Timestamp); } if (jsonData.Data.Signature) { postman.setEnvironmentVariable(\"signature\", jsonData.Data.Signature); } if (jsonData.Data.PartnerID) { postman.setEnvironmentVariable(\"partner_id\", jsonData.Data.PartnerID); } if (jsonData.Data.GetPlusID) { postman.setEnvironmentVariable(\"getplus_id\", jsonData.Data.GetPlusID); } POST Method Use this json file with the format below to insert request otp. { \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\", \"Signature\": \"Kytny4DWs8lgeDv+9TSuUznZR480V6G6n90o2tvI9L0=\", \"Timestamp\": \"1662092274\" } for PartnerID and GetplusID is confidential data. So, use the previously obtained Partner ID and Getplus ID . GET Method For GET method, add this in params . for PartnerID and GetplusID is confidential data. So, use the previously obtained Partner ID and Getplus ID . Result { \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"Timestamp\": 1664343761, \"Signature\": \"gPEHkwifUdCyiYTIfsL0cj7Lx7dSeBCBd1SbQyVLhe4=\", \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\" } } Error Condition if request more than 3 times { \"ErrorCode\": 42201, \"ErrorDescription\": \"Maximum OTP reach\" }","title":"Request OTP"},{"location":"getplus/requestotp/#request-otp","text":"","title":"Request OTP"},{"location":"getplus/requestotp/#endpoint","text":"[POST] {{partner_service_url}}/security/v1/201904/oauth/otp [GET] {{base_url}}/mobile/v1/202001/utils/auth/partner-signature?PartnerID=(confidential data)&EncryptKey=55HCmiPaEkEEy20LWP8V9nGbvpkl6EY8USqDkaRRlrk=&GetPlusID=(confidential data) to get OTP, use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then paste token.","title":"Endpoint"},{"location":"getplus/requestotp/#test","text":"and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Timestamp) { postman.setEnvironmentVariable(\"timestamp\", jsonData.Data.Timestamp); } if (jsonData.Data.Signature) { postman.setEnvironmentVariable(\"signature\", jsonData.Data.Signature); } if (jsonData.Data.PartnerID) { postman.setEnvironmentVariable(\"partner_id\", jsonData.Data.PartnerID); } if (jsonData.Data.GetPlusID) { postman.setEnvironmentVariable(\"getplus_id\", jsonData.Data.GetPlusID); }","title":"Test"},{"location":"getplus/requestotp/#post-method","text":"Use this json file with the format below to insert request otp. { \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\", \"Signature\": \"Kytny4DWs8lgeDv+9TSuUznZR480V6G6n90o2tvI9L0=\", \"Timestamp\": \"1662092274\" } for PartnerID and GetplusID is confidential data. So, use the previously obtained Partner ID and Getplus ID .","title":"POST Method"},{"location":"getplus/requestotp/#get-method","text":"For GET method, add this in params . for PartnerID and GetplusID is confidential data. So, use the previously obtained Partner ID and Getplus ID .","title":"GET Method"},{"location":"getplus/requestotp/#result","text":"{ \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"Timestamp\": 1664343761, \"Signature\": \"gPEHkwifUdCyiYTIfsL0cj7Lx7dSeBCBd1SbQyVLhe4=\", \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\" } }","title":"Result"},{"location":"getplus/requestotp/#error-condition","text":"if request more than 3 times { \"ErrorCode\": 42201, \"ErrorDescription\": \"Maximum OTP reach\" }","title":"Error Condition"},{"location":"getplus/verifyotp/","text":"Verify OTP Endpoint [POST] {{partner_service_url}}/security/v1/201904/oauth/verify [GET] {{base_url}}/mobile/v1/202001/utils/auth/partner-signature?PartnerID=(confidential data)&EncryptKey=55HCmiPaEkEEy20LWP8V9nGbvpkl6EY8USqDkaRRlrk=&GetPlusID=(confidential data) to verify OTP, use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then paste token. Test and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Timestamp) { postman.setEnvironmentVariable(\"timestamp\", jsonData.Data.Timestamp); } if (jsonData.Data.Signature) { postman.setEnvironmentVariable(\"signature\", jsonData.Data.Signature); } if (jsonData.Data.PartnerID) { postman.setEnvironmentVariable(\"partner_id\", jsonData.Data.PartnerID); } if (jsonData.Data.PartnerCustomerAccountID) { postman.setEnvironmentVariable(\"partner_customer_id\", jsonData.Data.PartnerCustomerAccountID); } if (jsonData.Data.OTP) { postman.setEnvironmentVariable(\"otp_result\", jsonData.Data.OTP); } POST Method Use this json file with the format below to verify OTP. { \"PartnerCustomerAccountID\": \"(confidential data)\", \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\", \"Signature\": \"EROGkFQkA0kswYIsIZstEbirg8MxTStoY0ZwOvBpY4I=\", \"Timestamp\": \"1662101936\", \"OTP\": \"817270\" } for PartnerCustomerAccountID , PartnerID and GetplusID is confidential data. So, use the previously obtained PartnerCustomerAccountID , Partner ID and Getplus ID . GET Method For GET method, add this in params . Result POST Method { \"Data\": { \"MemberApplicationID\": \"(confidential data)\", \"JoinCode\": 1, \"MembershipNumber\": \"(confidential data)\" }, \"ErrorCode\": 0, \"ErrorDescription\": null } Result GET Method { \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"Timestamp\": 1664343761, \"Signature\": \"gPEHkwifUdCyiYTIfsL0cj7Lx7dSeBCBd1SbQyVLhe4=\", \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\" } } Error Condition If the otp expired. { \"ErrorCode\": -16, \"ErrorDescription\": \"OTP code expired\" } If the otp invalid. { \"ErrorCode\": -16, \"ErrorDescription\": \"OTP code expired\" }","title":"Verify OTP"},{"location":"getplus/verifyotp/#verify-otp","text":"","title":"Verify OTP"},{"location":"getplus/verifyotp/#endpoint","text":"[POST] {{partner_service_url}}/security/v1/201904/oauth/verify [GET] {{base_url}}/mobile/v1/202001/utils/auth/partner-signature?PartnerID=(confidential data)&EncryptKey=55HCmiPaEkEEy20LWP8V9nGbvpkl6EY8USqDkaRRlrk=&GetPlusID=(confidential data) to verify OTP, use the token obtained from the previous partner token response as basic authentication , on postman select authorization next to params , then select Bearer Token , then paste token.","title":"Endpoint"},{"location":"getplus/verifyotp/#test","text":"and also, select test and add this code. var jsonData = JSON.parse(responseBody); if (jsonData.Data.Timestamp) { postman.setEnvironmentVariable(\"timestamp\", jsonData.Data.Timestamp); } if (jsonData.Data.Signature) { postman.setEnvironmentVariable(\"signature\", jsonData.Data.Signature); } if (jsonData.Data.PartnerID) { postman.setEnvironmentVariable(\"partner_id\", jsonData.Data.PartnerID); } if (jsonData.Data.PartnerCustomerAccountID) { postman.setEnvironmentVariable(\"partner_customer_id\", jsonData.Data.PartnerCustomerAccountID); } if (jsonData.Data.OTP) { postman.setEnvironmentVariable(\"otp_result\", jsonData.Data.OTP); }","title":"Test"},{"location":"getplus/verifyotp/#post-method","text":"Use this json file with the format below to verify OTP. { \"PartnerCustomerAccountID\": \"(confidential data)\", \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\", \"Signature\": \"EROGkFQkA0kswYIsIZstEbirg8MxTStoY0ZwOvBpY4I=\", \"Timestamp\": \"1662101936\", \"OTP\": \"817270\" } for PartnerCustomerAccountID , PartnerID and GetplusID is confidential data. So, use the previously obtained PartnerCustomerAccountID , Partner ID and Getplus ID .","title":"POST Method"},{"location":"getplus/verifyotp/#get-method","text":"For GET method, add this in params .","title":"GET Method"},{"location":"getplus/verifyotp/#result-post-method","text":"{ \"Data\": { \"MemberApplicationID\": \"(confidential data)\", \"JoinCode\": 1, \"MembershipNumber\": \"(confidential data)\" }, \"ErrorCode\": 0, \"ErrorDescription\": null }","title":"Result POST Method"},{"location":"getplus/verifyotp/#result-get-method","text":"{ \"ErrorCode\": 0, \"ErrorDescription\": \"\", \"Data\": { \"Timestamp\": 1664343761, \"Signature\": \"gPEHkwifUdCyiYTIfsL0cj7Lx7dSeBCBd1SbQyVLhe4=\", \"PartnerID\": \"(confidential data)\", \"GetPlusID\": \"(confidential data)\" } }","title":"Result GET Method"},{"location":"getplus/verifyotp/#error-condition","text":"If the otp expired. { \"ErrorCode\": -16, \"ErrorDescription\": \"OTP code expired\" } If the otp invalid. { \"ErrorCode\": -16, \"ErrorDescription\": \"OTP code expired\" }","title":"Error Condition"},{"location":"history/coinhistory/","text":"Coin History Endpoint [GET] url/history/coin/?id=2 GET Method For GET method, use id as params to get coin history. Result { \"message\": \"successfully\", \"results\": { \"coin\": [ { \"id\": 1, \"transaksi\": \"(confidential data)\", \"coin\": 40, \"datehistory\": \"2022-12-27T07:10:58.683541\", \"status\": 0, \"statushistory\": 1, \"iduser\": 2, \"keterangan\": \"REDEM QWERTY12\" } ], \"details\": [ { \"id\": 2, \"reward\": 0, \"point\": 185, \"coin\": 40, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 0, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null } ] } }","title":"Coin"},{"location":"history/coinhistory/#coin-history","text":"","title":"Coin History"},{"location":"history/coinhistory/#endpoint","text":"[GET] url/history/coin/?id=2","title":"Endpoint"},{"location":"history/coinhistory/#get-method","text":"For GET method, use id as params to get coin history.","title":"GET Method"},{"location":"history/coinhistory/#result","text":"{ \"message\": \"successfully\", \"results\": { \"coin\": [ { \"id\": 1, \"transaksi\": \"(confidential data)\", \"coin\": 40, \"datehistory\": \"2022-12-27T07:10:58.683541\", \"status\": 0, \"statushistory\": 1, \"iduser\": 2, \"keterangan\": \"REDEM QWERTY12\" } ], \"details\": [ { \"id\": 2, \"reward\": 0, \"point\": 185, \"coin\": 40, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 0, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null } ] } }","title":"Result"},{"location":"history/pointcoint/","text":"Point-Coin History Endpoint [GET] url/history/point-coint/?id=2 GET Method For GET method, use id as params to get point-coin history. Result { \"message\": \"successfully\", \"results\": { \"point\": [ { \"id\": 1, \"transaksi\": \"(confidential data)\", \"point\": 40, \"datehistory\": \"2022-12-26T12:36:29.494899\", \"status\": 0, \"statushistory\": 1, \"iduser\": 2, \"keterangan\": \"REDEM QWERTY12\" }, { \"id\": 2, \"transaksi\": \"(confidential data)\", \"point\": 250, \"datehistory\": \"2022-12-26T12:39:57.273647\", \"status\": 0, \"statushistory\": 1, \"iduser\": 2, \"keterangan\": \"REDEEM FOR NEW ACCOUNT, POINT SEND TO GETPLUS\" }, { \"id\": 4, \"transaksi\": \"(confidential data)\", \"point\": 25, \"datehistory\": \"2022-12-26T12:42:53.218745\", \"status\": 0, \"statushistory\": 1, \"iduser\": 2, \"keterangan\": \"POINT FROM FEEDBACK\" } ], \"coin\": [ { \"id\": 1, \"transaksi\": \"(confidential data)\", \"coin\": 40, \"datehistory\": \"2022-12-26T12:36:29.510899\", \"status\": 0, \"statushistory\": 1, \"iduser\": 2, \"keterangan\": \"REDEM QWERTY12\" } ], \"details\": [ { \"id\": 2, \"reward\": 0, \"point\": 65, \"coin\": 40, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 1, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null } ] } }","title":"Point - Coin"},{"location":"history/pointcoint/#point-coin-history","text":"","title":"Point-Coin History"},{"location":"history/pointcoint/#endpoint","text":"[GET] url/history/point-coint/?id=2","title":"Endpoint"},{"location":"history/pointcoint/#get-method","text":"For GET method, use id as params to get point-coin history.","title":"GET Method"},{"location":"history/pointcoint/#result","text":"{ \"message\": \"successfully\", \"results\": { \"point\": [ { \"id\": 1, \"transaksi\": \"(confidential data)\", \"point\": 40, \"datehistory\": \"2022-12-26T12:36:29.494899\", \"status\": 0, \"statushistory\": 1, \"iduser\": 2, \"keterangan\": \"REDEM QWERTY12\" }, { \"id\": 2, \"transaksi\": \"(confidential data)\", \"point\": 250, \"datehistory\": \"2022-12-26T12:39:57.273647\", \"status\": 0, \"statushistory\": 1, \"iduser\": 2, \"keterangan\": \"REDEEM FOR NEW ACCOUNT, POINT SEND TO GETPLUS\" }, { \"id\": 4, \"transaksi\": \"(confidential data)\", \"point\": 25, \"datehistory\": \"2022-12-26T12:42:53.218745\", \"status\": 0, \"statushistory\": 1, \"iduser\": 2, \"keterangan\": \"POINT FROM FEEDBACK\" } ], \"coin\": [ { \"id\": 1, \"transaksi\": \"(confidential data)\", \"coin\": 40, \"datehistory\": \"2022-12-26T12:36:29.510899\", \"status\": 0, \"statushistory\": 1, \"iduser\": 2, \"keterangan\": \"REDEM QWERTY12\" } ], \"details\": [ { \"id\": 2, \"reward\": 0, \"point\": 65, \"coin\": 40, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 1, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null } ] } }","title":"Result"},{"location":"history/pointhistory/","text":"Point History Endpoint [GET] url/user/point-history-set/2 Result { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"TransactionID\": \"UBEATZGP/(confidential data)\", \"TransactionValue\": 250 } }","title":"Point"},{"location":"history/pointhistory/#point-history","text":"","title":"Point History"},{"location":"history/pointhistory/#endpoint","text":"[GET] url/user/point-history-set/2","title":"Endpoint"},{"location":"history/pointhistory/#result","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"TransactionID\": \"UBEATZGP/(confidential data)\", \"TransactionValue\": 250 } }","title":"Result"},{"location":"member/addpoint/","text":"Add Point Endpoint [POST] url/add_point/auth/ Before adding points, make sure you already have an account, username and password will be used as basic authentication to add points. On postman select authorization next to params , then select basic auth type , then insert the username and password that were registered previously. POST Method Use this json file with the format below to add point. { \"email\" : \"(confidential data)\", \"userid\" : 2, \"value_point\" : 60 } Result { \"Status\": true, \"message\": \"added point successfully\", \"results\": { \"master\": [ { \"id_addpoint\": 1, \"value_point\": 60, \"email\": \"(confidential data)\", \"userid\": 2, \"created_at\": \"2022-12-28T08:09:22.057864\" } ] } }","title":"Add Point"},{"location":"member/addpoint/#add-point","text":"","title":"Add Point"},{"location":"member/addpoint/#endpoint","text":"[POST] url/add_point/auth/ Before adding points, make sure you already have an account, username and password will be used as basic authentication to add points. On postman select authorization next to params , then select basic auth type , then insert the username and password that were registered previously.","title":"Endpoint"},{"location":"member/addpoint/#post-method","text":"Use this json file with the format below to add point. { \"email\" : \"(confidential data)\", \"userid\" : 2, \"value_point\" : 60 }","title":"POST Method"},{"location":"member/addpoint/#result","text":"{ \"Status\": true, \"message\": \"added point successfully\", \"results\": { \"master\": [ { \"id_addpoint\": 1, \"value_point\": 60, \"email\": \"(confidential data)\", \"userid\": 2, \"created_at\": \"2022-12-28T08:09:22.057864\" } ] } }","title":"Result"},{"location":"member/feedback/","text":"Feedback Endpoint [POST] url/feedback/feedback/ [GET] url/feedback/feedback/ POST Method Use this json file with the format below to insert feedback. { \"userid\": 2, \"duration\": \"4\", \"location\": \"SMS\", \"Sound\": \"exc\", \"Song\": \"exc\", \"FandB\": \"exc\", \"staff\": \"exc\", \"area_clean\": \"exc\", \"sugest_song\": \"padi - semua tak sama\" } Result POST Method { \"message\": \"successfully\", \"results\": { \"master\": [ { \"id\": 2, \"create_at\": \"2022-12-29T06:05:24.186663\", \"userid\": 2, \"duration\": \"4\", \"location\": \"SMS\", \"Sound\": \"exc\", \"Song\": \"exc\", \"FandB\": \"exc\", \"staff\": \"exc\", \"area_clean\": \"exc\", \"sugest_song\": \"padi - semua tak sama\" } ] }, \"success\": true } Result GET Method { \"message\": \"successfully\", \"results\": [ { \"id\": 1, \"create_at\": \"2022-12-29T06:05:03.851498\", \"userid\": 1, \"duration\": \"30\", \"location\": \"SMS\", \"Sound\": \"exc\", \"Song\": \"exc\", \"FandB\": \"exc\", \"staff\": \"exc\", \"area_clean\": \"exc\", \"sugest_song\": \"padi - semua tak sama\" }, { \"id\": 2, \"create_at\": \"2022-12-29T06:05:24.186663\", \"userid\": 2, \"duration\": \"4\", \"location\": \"SMS\", \"Sound\": \"exc\", \"Song\": \"exc\", \"FandB\": \"exc\", \"staff\": \"exc\", \"area_clean\": \"exc\", \"sugest_song\": \"padi - semua tak sama\" } ] }","title":"Feedback"},{"location":"member/feedback/#feedback","text":"","title":"Feedback"},{"location":"member/feedback/#endpoint","text":"[POST] url/feedback/feedback/ [GET] url/feedback/feedback/","title":"Endpoint"},{"location":"member/feedback/#post-method","text":"Use this json file with the format below to insert feedback. { \"userid\": 2, \"duration\": \"4\", \"location\": \"SMS\", \"Sound\": \"exc\", \"Song\": \"exc\", \"FandB\": \"exc\", \"staff\": \"exc\", \"area_clean\": \"exc\", \"sugest_song\": \"padi - semua tak sama\" }","title":"POST Method"},{"location":"member/feedback/#result-post-method","text":"{ \"message\": \"successfully\", \"results\": { \"master\": [ { \"id\": 2, \"create_at\": \"2022-12-29T06:05:24.186663\", \"userid\": 2, \"duration\": \"4\", \"location\": \"SMS\", \"Sound\": \"exc\", \"Song\": \"exc\", \"FandB\": \"exc\", \"staff\": \"exc\", \"area_clean\": \"exc\", \"sugest_song\": \"padi - semua tak sama\" } ] }, \"success\": true }","title":"Result POST Method"},{"location":"member/feedback/#result-get-method","text":"{ \"message\": \"successfully\", \"results\": [ { \"id\": 1, \"create_at\": \"2022-12-29T06:05:03.851498\", \"userid\": 1, \"duration\": \"30\", \"location\": \"SMS\", \"Sound\": \"exc\", \"Song\": \"exc\", \"FandB\": \"exc\", \"staff\": \"exc\", \"area_clean\": \"exc\", \"sugest_song\": \"padi - semua tak sama\" }, { \"id\": 2, \"create_at\": \"2022-12-29T06:05:24.186663\", \"userid\": 2, \"duration\": \"4\", \"location\": \"SMS\", \"Sound\": \"exc\", \"Song\": \"exc\", \"FandB\": \"exc\", \"staff\": \"exc\", \"area_clean\": \"exc\", \"sugest_song\": \"padi - semua tak sama\" } ] }","title":"Result GET Method"},{"location":"system/location/","text":"Location Endpoint [POST] url/location/location/ [GET] url/location/location/?open=1 POST Method Use this json file with the format below to insert location. { \"place\": \"Pos Bloc Jakarta Phase 2 Lt. 1\", \"address\": \"Pos No.2, Ps.Baru, Kecamatan Sawah Besar, Kota Jakarta Pusat, Daerah Khusus Ibukota Jakarta 10710\", \"link\": \"https://(confidential data)\", \"open\": 1 } GET Method Use open as params to get location. Result POST Method { \"message\": \"successfully\", \"results\": { \"master\": [ { \"id\": 2, \"place\": \"Pos Bloc Jakarta Phase 2 Lt. 1\", \"address\": \"Pos No.2, Ps.Baru, Kecamatan Sawah Besar, Kota Jakarta Pusat, Daerah Khusus Ibukota Jakarta 10710\", \"link\": \"https://(confidential data)\", \"open\": 1 } ] } } Result GET Method { \"message\": \"successfully\", \"results\": [ { \"id\": 2, \"place\": \"Pos Bloc Jakarta Lt.2 East Garden\", \"address\": \"Pos No.2, Ps. Baru, Kecamatan Sawah Besar, Kota Jakarta Pusat, Daerah Khusus Ibukota Jakarta 10710\", \"link\": \"https://(confidential data)\", \"open\": 1 } ], \"success\": true }","title":"Location"},{"location":"system/location/#location","text":"","title":"Location"},{"location":"system/location/#endpoint","text":"[POST] url/location/location/ [GET] url/location/location/?open=1","title":"Endpoint"},{"location":"system/location/#post-method","text":"Use this json file with the format below to insert location. { \"place\": \"Pos Bloc Jakarta Phase 2 Lt. 1\", \"address\": \"Pos No.2, Ps.Baru, Kecamatan Sawah Besar, Kota Jakarta Pusat, Daerah Khusus Ibukota Jakarta 10710\", \"link\": \"https://(confidential data)\", \"open\": 1 }","title":"POST Method"},{"location":"system/location/#get-method","text":"Use open as params to get location.","title":"GET Method"},{"location":"system/location/#result-post-method","text":"{ \"message\": \"successfully\", \"results\": { \"master\": [ { \"id\": 2, \"place\": \"Pos Bloc Jakarta Phase 2 Lt. 1\", \"address\": \"Pos No.2, Ps.Baru, Kecamatan Sawah Besar, Kota Jakarta Pusat, Daerah Khusus Ibukota Jakarta 10710\", \"link\": \"https://(confidential data)\", \"open\": 1 } ] } }","title":"Result POST Method"},{"location":"system/location/#result-get-method","text":"{ \"message\": \"successfully\", \"results\": [ { \"id\": 2, \"place\": \"Pos Bloc Jakarta Lt.2 East Garden\", \"address\": \"Pos No.2, Ps. Baru, Kecamatan Sawah Besar, Kota Jakarta Pusat, Daerah Khusus Ibukota Jakarta 10710\", \"link\": \"https://(confidential data)\", \"open\": 1 } ], \"success\": true }","title":"Result GET Method"},{"location":"system/voucherbyapiubeatz/","text":"Voucher by API Ubeatz Endpoint [POST] http://api.ubeatz.co.id/v1/voucher [GET] http://api.ubeatz.co.id/v1/voucher POST Method Use this json file with the format below to insert voucher. { \"title\": \"test02\", \"code\": \"(confidential data)\", \"description\": \"Lorem Ipsum\", \"value\": 100, \"max_value\": 100, \"value_type\": \"price\", \"start_date\": \"2023-01-07T07:21:19.000+07:00\", \"expired_date\": \"2023-01-08T07:21:19.000+07:00\", \"quantity\": 1, \"actor\": \"ids\" } Result POST Method { \"meta\": { \"status\": 201, \"message\": \"Create voucher success\" }, \"data\": { \"id\": (confidential data), \"title\": \"test02\", \"code\": \"(confidential data)\", \"description\": \"Lorem Ipsum\", \"value\": 100, \"max_value\": 100, \"value_type\": \"price\", \"voucher_type\": \"discount\", \"start_date\": \"2023-01-07T07:21:19.000+07:00\", \"expired_date\": \"2023-01-08T07:21:19.000+07:00\", \"quantity\": 1, \"created_at\": \"2023-01-09T15:28:27.000+07:00\", \"updated_at\": \"2023-01-09T15:28:27.000+07:00\", \"is_enable\": true, \"actor\": \"promotion\", \"status\": \"pending\", \"branches\": [ { \"id\": (confidential data), \"voucher_id\": (confidential data), \"branch_id\": (confidential data), \"created_at\": \"2023-01-09T15:28:27.000+07:00\", \"updated_at\": \"2023-01-09T15:28:27.000+07:00\", \"name\": \"Summarecon Mall Serpong\" }, ... ] } } Result GET Method { \"meta\": { \"status\": 200, \"message\": \"Fetch data success\" }, \"data\": [ { \"id\": (confidential data) \"title\": \"VCTEST80\", \"code\": \"(confidential data)\", \"description\": \"Voucher testing 80%\", \"value\": 80, \"max_value\": 75000, \"value_type\": \"percent\", \"voucher_type\": \"discount\", \"start_date\": \"2022-11-04T10:00:00.000+07:00\", \"expired_date\": \"2022-11-05T10:00:00.000+07:00\", \"quantity\": 5, \"created_at\": \"2022-11-04T09:48:54.000+07:00\", \"updated_at\": \"2022-11-04T09:48:54.000+07:00\", \"is_enable\": true, \"actor\": \"promotion\", \"status\": \"pending\", \"branches\": [ { \"id\": (confidential data), \"voucher_id\": (confidential data) \"branch_id\": (confidential data), \"created_at\": \"2022-11-27T14:41:55.000+07:00\", \"updated_at\": \"2022-11-27T14:41:55.000+07:00\", \"name\": \"Posbloc\" } ] }, ... ] }","title":"Voucher by API Ubeatz"},{"location":"system/voucherbyapiubeatz/#voucher-by-api-ubeatz","text":"","title":"Voucher by API Ubeatz"},{"location":"system/voucherbyapiubeatz/#endpoint","text":"[POST] http://api.ubeatz.co.id/v1/voucher [GET] http://api.ubeatz.co.id/v1/voucher","title":"Endpoint"},{"location":"system/voucherbyapiubeatz/#post-method","text":"Use this json file with the format below to insert voucher. { \"title\": \"test02\", \"code\": \"(confidential data)\", \"description\": \"Lorem Ipsum\", \"value\": 100, \"max_value\": 100, \"value_type\": \"price\", \"start_date\": \"2023-01-07T07:21:19.000+07:00\", \"expired_date\": \"2023-01-08T07:21:19.000+07:00\", \"quantity\": 1, \"actor\": \"ids\" }","title":"POST Method"},{"location":"system/voucherbyapiubeatz/#result-post-method","text":"{ \"meta\": { \"status\": 201, \"message\": \"Create voucher success\" }, \"data\": { \"id\": (confidential data), \"title\": \"test02\", \"code\": \"(confidential data)\", \"description\": \"Lorem Ipsum\", \"value\": 100, \"max_value\": 100, \"value_type\": \"price\", \"voucher_type\": \"discount\", \"start_date\": \"2023-01-07T07:21:19.000+07:00\", \"expired_date\": \"2023-01-08T07:21:19.000+07:00\", \"quantity\": 1, \"created_at\": \"2023-01-09T15:28:27.000+07:00\", \"updated_at\": \"2023-01-09T15:28:27.000+07:00\", \"is_enable\": true, \"actor\": \"promotion\", \"status\": \"pending\", \"branches\": [ { \"id\": (confidential data), \"voucher_id\": (confidential data), \"branch_id\": (confidential data), \"created_at\": \"2023-01-09T15:28:27.000+07:00\", \"updated_at\": \"2023-01-09T15:28:27.000+07:00\", \"name\": \"Summarecon Mall Serpong\" }, ... ] } }","title":"Result POST Method"},{"location":"system/voucherbyapiubeatz/#result-get-method","text":"{ \"meta\": { \"status\": 200, \"message\": \"Fetch data success\" }, \"data\": [ { \"id\": (confidential data) \"title\": \"VCTEST80\", \"code\": \"(confidential data)\", \"description\": \"Voucher testing 80%\", \"value\": 80, \"max_value\": 75000, \"value_type\": \"percent\", \"voucher_type\": \"discount\", \"start_date\": \"2022-11-04T10:00:00.000+07:00\", \"expired_date\": \"2022-11-05T10:00:00.000+07:00\", \"quantity\": 5, \"created_at\": \"2022-11-04T09:48:54.000+07:00\", \"updated_at\": \"2022-11-04T09:48:54.000+07:00\", \"is_enable\": true, \"actor\": \"promotion\", \"status\": \"pending\", \"branches\": [ { \"id\": (confidential data), \"voucher_id\": (confidential data) \"branch_id\": (confidential data), \"created_at\": \"2022-11-27T14:41:55.000+07:00\", \"updated_at\": \"2022-11-27T14:41:55.000+07:00\", \"name\": \"Posbloc\" } ] }, ... ] }","title":"Result GET Method"},{"location":"system/devices/checkinitem/","text":"Devices > Checkin Item Endpoint [PUT] url/devices/booth-devices-checkin/?namadevices=(confidential data) PUT Method For PUT method, use namadevices as params . and also, add this json file with the format below to update checkin item. { \"status\" : 1, \"user\" : 2, \"durasi\" : 3, \"addtime\" : 1 } Result PUT Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"(confidential data)\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": \"2023-01-06T04:18:57.920774\", \"userid\": null, \"durasi\": 3, \"addtime\": 1, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": \"2\" } ] } } Devices > Checkin Item Code Endpoint [PUT] url/devices/booth-devices-checkin-code/?code=(confidential data) PUT Method For PUT method, use code as params . and also, add this json file with the format below to update checkin item code. { \"status\" : 1, \"iduser\" : 2, \"durasi\" : 3, \"addtime\" : 1 } Result PUT Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"73d7f26052f2c1b0\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": \"2023-01-06T05:19:18.052560\", \"userid\": 2, \"durasi\": 3, \"addtime\": 1, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": \"2\" } ] } } Conclusion the difference between Devices > Checkin Item and Devices > Checkin Item Code : Devices > Checkin Item Devices > Checkin Item Code Params namadevices code Naming json file user section > user user section > iduser","title":"Checkin Item"},{"location":"system/devices/checkinitem/#devices-checkin-item","text":"","title":"Devices &gt; Checkin Item"},{"location":"system/devices/checkinitem/#endpoint","text":"[PUT] url/devices/booth-devices-checkin/?namadevices=(confidential data)","title":"Endpoint"},{"location":"system/devices/checkinitem/#put-method","text":"For PUT method, use namadevices as params . and also, add this json file with the format below to update checkin item. { \"status\" : 1, \"user\" : 2, \"durasi\" : 3, \"addtime\" : 1 }","title":"PUT Method"},{"location":"system/devices/checkinitem/#result-put-method","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"(confidential data)\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": \"2023-01-06T04:18:57.920774\", \"userid\": null, \"durasi\": 3, \"addtime\": 1, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": \"2\" } ] } }","title":"Result PUT Method"},{"location":"system/devices/checkinitem/#devices-checkin-item-code","text":"","title":"Devices &gt; Checkin Item Code"},{"location":"system/devices/checkinitem/#endpoint_1","text":"[PUT] url/devices/booth-devices-checkin-code/?code=(confidential data)","title":"Endpoint"},{"location":"system/devices/checkinitem/#put-method_1","text":"For PUT method, use code as params . and also, add this json file with the format below to update checkin item code. { \"status\" : 1, \"iduser\" : 2, \"durasi\" : 3, \"addtime\" : 1 }","title":"PUT Method"},{"location":"system/devices/checkinitem/#result-put-method_1","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"73d7f26052f2c1b0\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": \"2023-01-06T05:19:18.052560\", \"userid\": 2, \"durasi\": 3, \"addtime\": 1, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": \"2\" } ] } }","title":"Result PUT Method"},{"location":"system/devices/checkinitem/#conclusion","text":"the difference between Devices > Checkin Item and Devices > Checkin Item Code : Devices > Checkin Item Devices > Checkin Item Code Params namadevices code Naming json file user section > user user section > iduser","title":"Conclusion"},{"location":"system/devices/devices/","text":"Devices Endpoint [POST] url/devices/booth-devices/ [GET] url/devices/booth-devices/ [PUT] url/devices/booth-devices/?namadevices=(confidential data) POST Method Use this json file with the format below to insert devices. { \"namadevices\" : \"(confidential data)\", \"status\" : 1, \"players\" : 1, \"durasi\" : 4, \"addtime\" : 2, \"codeconnect\" : \"(confidential data)\", \"codeoutlet\" : \"UBT\", \"namabooth\" : \"(confidential data)\", \"ipadd\" : \"(confidential data)\" } PUT Method For PUT method, use namadevices as params . and also, add this json file with the format below to update devices. { \"codeconnect\" : (confidential data), \"code\" : \"UBT\", \"namabooth\" : \"(confidential data)\" } Result POST Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"(confidential data)\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": null, \"userid\": null, \"durasi\": 4, \"addtime\": 2, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": null } ], \"tools\": [ { \"id\": 1, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" }, { \"path\": \"http://(confidential data)/imgpromo/4.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://(confidential data)/data/\" } ], \"code\": \"UBT\", \"keterangan\": \"Ubeatz\" } ] } } Result GET Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"(confidential data)\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": null, \"userid\": null, \"durasi\": 4, \"addtime\": 2, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": null } ] } } Result PUT Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"(confidential data)\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": null, \"userid\": null, \"durasi\": 4, \"addtime\": 2, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": null } ] } }","title":"Devices List"},{"location":"system/devices/devices/#devices","text":"","title":"Devices"},{"location":"system/devices/devices/#endpoint","text":"[POST] url/devices/booth-devices/ [GET] url/devices/booth-devices/ [PUT] url/devices/booth-devices/?namadevices=(confidential data)","title":"Endpoint"},{"location":"system/devices/devices/#post-method","text":"Use this json file with the format below to insert devices. { \"namadevices\" : \"(confidential data)\", \"status\" : 1, \"players\" : 1, \"durasi\" : 4, \"addtime\" : 2, \"codeconnect\" : \"(confidential data)\", \"codeoutlet\" : \"UBT\", \"namabooth\" : \"(confidential data)\", \"ipadd\" : \"(confidential data)\" }","title":"POST Method"},{"location":"system/devices/devices/#put-method","text":"For PUT method, use namadevices as params . and also, add this json file with the format below to update devices. { \"codeconnect\" : (confidential data), \"code\" : \"UBT\", \"namabooth\" : \"(confidential data)\" }","title":"PUT Method"},{"location":"system/devices/devices/#result-post-method","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"(confidential data)\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": null, \"userid\": null, \"durasi\": 4, \"addtime\": 2, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": null } ], \"tools\": [ { \"id\": 1, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" }, { \"path\": \"http://(confidential data)/imgpromo/4.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://(confidential data)/data/\" } ], \"code\": \"UBT\", \"keterangan\": \"Ubeatz\" } ] } }","title":"Result POST Method"},{"location":"system/devices/devices/#result-get-method","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"(confidential data)\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": null, \"userid\": null, \"durasi\": 4, \"addtime\": 2, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": null } ] } }","title":"Result GET Method"},{"location":"system/devices/devices/#result-put-method","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"(confidential data)\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": null, \"userid\": null, \"durasi\": 4, \"addtime\": 2, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": null } ] } }","title":"Result PUT Method"},{"location":"system/devices/searchitem/","text":"Devices > Search Item Endpoint [GET] url/devices/booth-devices-details/?namadevices=(confidential data) GET Method For GET method, use namadevices as params . Result GET Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"(confidential data)\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": null, \"userid\": null, \"durasi\": 4, \"addtime\": 2, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": null } ] } }","title":"Search Item"},{"location":"system/devices/searchitem/#devices-search-item","text":"","title":"Devices &gt; Search Item"},{"location":"system/devices/searchitem/#endpoint","text":"[GET] url/devices/booth-devices-details/?namadevices=(confidential data)","title":"Endpoint"},{"location":"system/devices/searchitem/#get-method","text":"For GET method, use namadevices as params .","title":"GET Method"},{"location":"system/devices/searchitem/#result-get-method","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"iddevices\": 3, \"namadevices\": \"(confidential data)\", \"nama\": \"(confidential data)\", \"status\": 1, \"players\": 1, \"codeconnect\": \"(confidential data)\", \"jam\": null, \"userid\": null, \"durasi\": 4, \"addtime\": 2, \"codeoutlet\": \"UBT\", \"idtransaksi\": null, \"ipaddress\": \"(confidential data)\", \"user\": null } ] } }","title":"Result GET Method"},{"location":"system/tools/searchtools/","text":"Tools > Search by Code Endpoint [GET] url/tools/devices-details/?code=ALS GET Method For GET method, use code as params . Result GET Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"id\": 2, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\" } ], \"code\": \"ALS\", \"keterangan\": \"Ubeatz\" } ] } }","title":"Search Tools"},{"location":"system/tools/searchtools/#tools-search-by-code","text":"","title":"Tools &gt; Search by Code"},{"location":"system/tools/searchtools/#endpoint","text":"[GET] url/tools/devices-details/?code=ALS","title":"Endpoint"},{"location":"system/tools/searchtools/#get-method","text":"For GET method, use code as params .","title":"GET Method"},{"location":"system/tools/searchtools/#result-get-method","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"id\": 2, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\" } ], \"code\": \"ALS\", \"keterangan\": \"Ubeatz\" } ] } }","title":"Result GET Method"},{"location":"system/tools/tools/","text":"Tools Endpoint [POST] url/tools/devices/ [GET] url/tools/devices/ [PUT] url/tools/devices/?code=ALS POST Method Use this json file with the format below to insert tools. { \"runtext\" : [{\"text\": \"Selamat Datang Di Karaoke\"},{\"text\": \"Free 1 Jam Gratis 1 Jam\"},{\"text\": \"Discount 10% Khusus Member\"}], \"promo\" : [{\"path\": \"http://(confidential data)/imgpromo/1.png\"}, {\"path\": \"http://(confidential data)/imgpromo/2.png\"},{\"path\": \"http://(confidential data)/imgpromo/3.png\"}, {\"path\": \"http://(confidential data)/imgpromo/4.png\"}], \"opening\" : [{\"path\": \"http://(confidential data)/promo.mp4\"}], \"setting\" : [{\"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\"}], \"code\" : \"ALS\", \"keterangan\" : \"Ubeatz\" } PUT Method For PUT method, use code as params . and also, add this json file with the format below to update tools. { \"runtext\" : [{\"text\": \"Selamat Datang Di Karaoke\"},{\"text\": \"Free 1 Jam Gratis 1 Jam\"},{\"text\": \"Discount 10% Khusus Member\"}], \"promo\" : [{\"path\": \"http://(confidential data)/imgpromo/1.png\"}, {\"path\": \"http://(confidential data)/imgpromo/2.png\"},{\"path\": \"http://(confidential data)/imgpromo/3.png\"}], \"opening\" : [{\"path\": \"http://(confidential data)/promo.mp4\"}], \"setting\" : [{\"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\"}], \"keterangan\" : \"Ubeatz\" } Result POST Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"id\": 2, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" }, { \"path\": \"http://(confidential data)/imgpromo/4.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\" } ], \"code\": \"ALS\", \"keterangan\": \"Ubeatz\" } ] } } Result GET Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"Tools\": [ { \"id\": 1, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" }, { \"path\": \"http://(confidential data)/imgpromo/4.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://10.0.1.200/data/\" } ], \"code\": \"UBT\", \"keterangan\": \"Ubeatz\" }, { \"id\": 2, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" }, { \"path\": \"http://(confidential data)/imgpromo/4.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\" } ], \"code\": \"ALS\", \"keterangan\": \"Ubeatz\" } ] } } Result PUT Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"id\": 2, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\" } ], \"code\": \"ALS\", \"keterangan\": \"Ubeatz\" } ] } } Error Condition If use the same code. { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"pesan\": \"Code sudah terpakai\" } }","title":"Tools List"},{"location":"system/tools/tools/#tools","text":"","title":"Tools"},{"location":"system/tools/tools/#endpoint","text":"[POST] url/tools/devices/ [GET] url/tools/devices/ [PUT] url/tools/devices/?code=ALS","title":"Endpoint"},{"location":"system/tools/tools/#post-method","text":"Use this json file with the format below to insert tools. { \"runtext\" : [{\"text\": \"Selamat Datang Di Karaoke\"},{\"text\": \"Free 1 Jam Gratis 1 Jam\"},{\"text\": \"Discount 10% Khusus Member\"}], \"promo\" : [{\"path\": \"http://(confidential data)/imgpromo/1.png\"}, {\"path\": \"http://(confidential data)/imgpromo/2.png\"},{\"path\": \"http://(confidential data)/imgpromo/3.png\"}, {\"path\": \"http://(confidential data)/imgpromo/4.png\"}], \"opening\" : [{\"path\": \"http://(confidential data)/promo.mp4\"}], \"setting\" : [{\"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\"}], \"code\" : \"ALS\", \"keterangan\" : \"Ubeatz\" }","title":"POST Method"},{"location":"system/tools/tools/#put-method","text":"For PUT method, use code as params . and also, add this json file with the format below to update tools. { \"runtext\" : [{\"text\": \"Selamat Datang Di Karaoke\"},{\"text\": \"Free 1 Jam Gratis 1 Jam\"},{\"text\": \"Discount 10% Khusus Member\"}], \"promo\" : [{\"path\": \"http://(confidential data)/imgpromo/1.png\"}, {\"path\": \"http://(confidential data)/imgpromo/2.png\"},{\"path\": \"http://(confidential data)/imgpromo/3.png\"}], \"opening\" : [{\"path\": \"http://(confidential data)/promo.mp4\"}], \"setting\" : [{\"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\"}], \"keterangan\" : \"Ubeatz\" }","title":"PUT Method"},{"location":"system/tools/tools/#result-post-method","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"id\": 2, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" }, { \"path\": \"http://(confidential data)/imgpromo/4.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\" } ], \"code\": \"ALS\", \"keterangan\": \"Ubeatz\" } ] } }","title":"Result POST Method"},{"location":"system/tools/tools/#result-get-method","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"Tools\": [ { \"id\": 1, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" }, { \"path\": \"http://(confidential data)/imgpromo/4.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://10.0.1.200/data/\" } ], \"code\": \"UBT\", \"keterangan\": \"Ubeatz\" }, { \"id\": 2, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" }, { \"path\": \"http://(confidential data)/imgpromo/4.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\" } ], \"code\": \"ALS\", \"keterangan\": \"Ubeatz\" } ] } }","title":"Result GET Method"},{"location":"system/tools/tools/#result-put-method","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"devices\": [ { \"id\": 2, \"runtext\": [ { \"text\": \"Selamat Datang Di Karaoke\" }, { \"text\": \"Free 1 Jam Gratis 1 Jam\" }, { \"text\": \"Discount 10% Khusus Member\" } ], \"promo\": [ { \"path\": \"http://(confidential data)/imgpromo/1.png\" }, { \"path\": \"http://(confidential data)/imgpromo/2.png\" }, { \"path\": \"http://(confidential data)/imgpromo/3.png\" } ], \"opening\": [ { \"path\": \"http://(confidential data)/promo.mp4\" } ], \"setting\": [ { \"urlserver_lagu\": \"http://(confidential data)/booth/lagu/\" } ], \"code\": \"ALS\", \"keterangan\": \"Ubeatz\" } ] } }","title":"Result PUT Method"},{"location":"system/tools/tools/#error-condition","text":"If use the same code. { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"pesan\": \"Code sudah terpakai\" } }","title":"Error Condition"},{"location":"system/voucher/redemvoucher/","text":"Redeem Voucher Endpoint [POST] url/redeem/reedemvoucher/ POST Method Use this json file with the format below to redeem voucher. { \"userid\" : 2, \"idvoucher\" : 2, \"kodevoucher\" : \"(confidential data)\", \"point\" : 10, \"coin\" : 10 } Result { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"voucher\": [ { \"id_voucher\": 2, \"nama_voucher\": \"Free SInging 60 minutes\", \"jenis\": 0, \"kode_voucher\": \"(confidential data)\", \"kode_voucher_merchand\": \"(confidential data)\", \"expired\": \"2022-06-14T00:00:00\", \"url\": \"https://(confidential data)/\", \"point\": 40, \"coin\": 40, \"ketentuan\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut eleifend velit. Aliquam pharetra mi ac felis elementum, eget congue enim dapibus. Mauris semper velit vitae tincidunt pretium. Donec ultricies purus sed leo commodo placerat. Aenean vehicula tristique sem a sagittis. Fusce non lorem consectetur, porta nisl id, consectetur sem. Nullam ipsum dolor, finibus vel ornare et, aliquam quis justo. Mauris enim diam, fermentum in fringilla quis, suscipit sit amet libero. Maecenas facilisis metus vitae auctor aliquam. Vestibulum sed sapien sed sem fringilla feugiat at sit amet est.\", \"id_siap\": (confidential data) } ], \"user\": [ { \"id\": 2, \"reward\": 0, \"point\": 225, \"coin\": 80, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 0, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null } ], \"value\": 40 } } Error Condition If redeem voucher 2 times with the same kodevoucher. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"duplicate voucher\" } If send wrong kodevoucher. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"code is wrong\" }","title":"Redeem Voucher"},{"location":"system/voucher/redemvoucher/#redeem-voucher","text":"","title":"Redeem Voucher"},{"location":"system/voucher/redemvoucher/#endpoint","text":"[POST] url/redeem/reedemvoucher/","title":"Endpoint"},{"location":"system/voucher/redemvoucher/#post-method","text":"Use this json file with the format below to redeem voucher. { \"userid\" : 2, \"idvoucher\" : 2, \"kodevoucher\" : \"(confidential data)\", \"point\" : 10, \"coin\" : 10 }","title":"POST Method"},{"location":"system/voucher/redemvoucher/#result","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"voucher\": [ { \"id_voucher\": 2, \"nama_voucher\": \"Free SInging 60 minutes\", \"jenis\": 0, \"kode_voucher\": \"(confidential data)\", \"kode_voucher_merchand\": \"(confidential data)\", \"expired\": \"2022-06-14T00:00:00\", \"url\": \"https://(confidential data)/\", \"point\": 40, \"coin\": 40, \"ketentuan\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut eleifend velit. Aliquam pharetra mi ac felis elementum, eget congue enim dapibus. Mauris semper velit vitae tincidunt pretium. Donec ultricies purus sed leo commodo placerat. Aenean vehicula tristique sem a sagittis. Fusce non lorem consectetur, porta nisl id, consectetur sem. Nullam ipsum dolor, finibus vel ornare et, aliquam quis justo. Mauris enim diam, fermentum in fringilla quis, suscipit sit amet libero. Maecenas facilisis metus vitae auctor aliquam. Vestibulum sed sapien sed sem fringilla feugiat at sit amet est.\", \"id_siap\": (confidential data) } ], \"user\": [ { \"id\": 2, \"reward\": 0, \"point\": 225, \"coin\": 80, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 0, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null } ], \"value\": 40 } }","title":"Result"},{"location":"system/voucher/redemvoucher/#error-condition","text":"If redeem voucher 2 times with the same kodevoucher. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"duplicate voucher\" } If send wrong kodevoucher. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"code is wrong\" }","title":"Error Condition"},{"location":"system/voucher/voucher/","text":"Voucher Endpoint [POST] url/voucher/voucher_list/ [GET] url/voucher/voucher_list/ POST Method Use this json file with the format below to insert voucher. { \"nama_voucher\": \"Free SInging 60 minutes\", \"jenis\": \"0\", \"kode_voucher_merchand\": \"(confidential data)\", \"expired\": \"2022-06-14 00:00:00.000000\", \"url\": \"https://(confidential data)\", \"point\": \"40\", \"coin\": \"40\", \"ketentuan\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut eleifend velit. Aliquam pharetra mi ac felis elementum, eget congue enim dapibus. Mauris semper velit vitae tincidunt pretium. Donec ultricies purus sed leo commodo placerat. Aenean vehicula tristique sem a sagittis. Fusce non lorem consectetur, porta nisl id, consectetur sem. Nullam ipsum dolor, finibus vel ornare et, aliquam quis justo. Mauris enim diam, fermentum in fringilla quis, suscipit sit amet libero. Maecenas facilisis metus vitae auctor aliquam. Vestibulum sed sapien sed sem fringilla feugiat at sit amet est.\", \"id_siap\": (confidential data), \"kode_voucher\": \"(confidential data)\" } Result POST Method { \"message\": \"successfully\", \"results\": { \"master\": [ { \"id_voucher\": 2, \"nama_voucher\": \"Free SInging 60 minutes\", \"jenis\": 0, \"kode_voucher\": \"(confidential data)\", \"kode_voucher_merchand\": \"(confidential data)\", \"expired\": \"2022-06-14T00:00:00\", \"url\": \"https://(confidential data)/\", \"point\": 40, \"coin\": 40, \"ketentuan\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut eleifend velit. Aliquam pharetra mi ac felis elementum, eget congue enim dapibus. Mauris semper velit vitae tincidunt pretium. Donec ultricies purus sed leo commodo placerat. Aenean vehicula tristique sem a sagittis. Fusce non lorem consectetur, porta nisl id, consectetur sem. Nullam ipsum dolor, finibus vel ornare et, aliquam quis justo. Mauris enim diam, fermentum in fringilla quis, suscipit sit amet libero. Maecenas facilisis metus vitae auctor aliquam. Vestibulum sed sapien sed sem fringilla feugiat at sit amet est.\", \"id_siap\": (confidential data) } ] } } Result GET Method { \"message\": \"successfully\", \"results\": [ { \"id_voucher\": 2, \"nama_voucher\": \"Free SInging 60 minutes\", \"jenis\": 0, \"kode_voucher\": \"(confidential data)\", \"kode_voucher_merchand\": \"(confidential data)\", \"expired\": \"2022-06-14T00:00:00\", \"url\": \"https://(confidential data)/\", \"point\": 40, \"coin\": 40, \"ketentuan\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut eleifend velit. Aliquam pharetra mi ac felis elementum, eget congue enim dapibus. Mauris semper velit vitae tincidunt pretium. Donec ultricies purus sed leo commodo placerat. Aenean vehicula tristique sem a sagittis. Fusce non lorem consectetur, porta nisl id, consectetur sem. Nullam ipsum dolor, finibus vel ornare et, aliquam quis justo. Mauris enim diam, fermentum in fringilla quis, suscipit sit amet libero. Maecenas facilisis metus vitae auctor aliquam. Vestibulum sed sapien sed sem fringilla feugiat at sit amet est.\", \"id_siap\": (confidential data) } ] }","title":"Voucher List"},{"location":"system/voucher/voucher/#voucher","text":"","title":"Voucher"},{"location":"system/voucher/voucher/#endpoint","text":"[POST] url/voucher/voucher_list/ [GET] url/voucher/voucher_list/","title":"Endpoint"},{"location":"system/voucher/voucher/#post-method","text":"Use this json file with the format below to insert voucher. { \"nama_voucher\": \"Free SInging 60 minutes\", \"jenis\": \"0\", \"kode_voucher_merchand\": \"(confidential data)\", \"expired\": \"2022-06-14 00:00:00.000000\", \"url\": \"https://(confidential data)\", \"point\": \"40\", \"coin\": \"40\", \"ketentuan\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut eleifend velit. Aliquam pharetra mi ac felis elementum, eget congue enim dapibus. Mauris semper velit vitae tincidunt pretium. Donec ultricies purus sed leo commodo placerat. Aenean vehicula tristique sem a sagittis. Fusce non lorem consectetur, porta nisl id, consectetur sem. Nullam ipsum dolor, finibus vel ornare et, aliquam quis justo. Mauris enim diam, fermentum in fringilla quis, suscipit sit amet libero. Maecenas facilisis metus vitae auctor aliquam. Vestibulum sed sapien sed sem fringilla feugiat at sit amet est.\", \"id_siap\": (confidential data), \"kode_voucher\": \"(confidential data)\" }","title":"POST Method"},{"location":"system/voucher/voucher/#result-post-method","text":"{ \"message\": \"successfully\", \"results\": { \"master\": [ { \"id_voucher\": 2, \"nama_voucher\": \"Free SInging 60 minutes\", \"jenis\": 0, \"kode_voucher\": \"(confidential data)\", \"kode_voucher_merchand\": \"(confidential data)\", \"expired\": \"2022-06-14T00:00:00\", \"url\": \"https://(confidential data)/\", \"point\": 40, \"coin\": 40, \"ketentuan\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut eleifend velit. Aliquam pharetra mi ac felis elementum, eget congue enim dapibus. Mauris semper velit vitae tincidunt pretium. Donec ultricies purus sed leo commodo placerat. Aenean vehicula tristique sem a sagittis. Fusce non lorem consectetur, porta nisl id, consectetur sem. Nullam ipsum dolor, finibus vel ornare et, aliquam quis justo. Mauris enim diam, fermentum in fringilla quis, suscipit sit amet libero. Maecenas facilisis metus vitae auctor aliquam. Vestibulum sed sapien sed sem fringilla feugiat at sit amet est.\", \"id_siap\": (confidential data) } ] } }","title":"Result POST Method"},{"location":"system/voucher/voucher/#result-get-method","text":"{ \"message\": \"successfully\", \"results\": [ { \"id_voucher\": 2, \"nama_voucher\": \"Free SInging 60 minutes\", \"jenis\": 0, \"kode_voucher\": \"(confidential data)\", \"kode_voucher_merchand\": \"(confidential data)\", \"expired\": \"2022-06-14T00:00:00\", \"url\": \"https://(confidential data)/\", \"point\": 40, \"coin\": 40, \"ketentuan\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut eleifend velit. Aliquam pharetra mi ac felis elementum, eget congue enim dapibus. Mauris semper velit vitae tincidunt pretium. Donec ultricies purus sed leo commodo placerat. Aenean vehicula tristique sem a sagittis. Fusce non lorem consectetur, porta nisl id, consectetur sem. Nullam ipsum dolor, finibus vel ornare et, aliquam quis justo. Mauris enim diam, fermentum in fringilla quis, suscipit sit amet libero. Maecenas facilisis metus vitae auctor aliquam. Vestibulum sed sapien sed sem fringilla feugiat at sit amet est.\", \"id_siap\": (confidential data) } ] }","title":"Result GET Method"},{"location":"system/voucher/mastervoucher/buyvouchermaster/","text":"Master Voucher > Buy Voucher Master Endpoint [GET] url/master_voucher/buyvouchermaster/ Result GET Method { \"message\": \"successfully\", \"results\": { \"master\": [ { \"idmastervoucher\": 1, \"namavoucher\": \"Voucher F&B 25.000\", \"keterangan\": \"no terms and conditions\", \"image\": \"https://i.pinimg.com/564x/7b/02/95/7b0295acfb67436930bcd5034c965e96.jpg\", \"harga_point\": 25000, \"harga_rupiah\": 25000, \"expired\": \"2023-01-09T10:18:46\", \"expirederdem\": 7, \"quota\": 1000, \"merchant\": 1, \"status\": 1 }, { \"idmastervoucher\": 2, \"namavoucher\": \"Voucher F&B 20.000\", \"keterangan\": \"S&K. minimum pembelanjaan 50ribu dan wajib purchase durasi waktu minimal 30 menit\", \"image\": \"https://i.pinimg.com/564x/55/0c/7f/550c7f5e5201687fef9c5a4ccc3730e7.jpg\", \"harga_point\": 20000, \"harga_rupiah\": 20000, \"expired\": \"2023-01-09T15:20:52\", \"expirederdem\": 7, \"quota\": 1000, \"merchant\": 1, \"status\": 1 } ] } }","title":"Buy Voucher Master"},{"location":"system/voucher/mastervoucher/buyvouchermaster/#master-voucher-buy-voucher-master","text":"","title":"Master Voucher &gt; Buy Voucher Master"},{"location":"system/voucher/mastervoucher/buyvouchermaster/#endpoint","text":"[GET] url/master_voucher/buyvouchermaster/","title":"Endpoint"},{"location":"system/voucher/mastervoucher/buyvouchermaster/#result-get-method","text":"{ \"message\": \"successfully\", \"results\": { \"master\": [ { \"idmastervoucher\": 1, \"namavoucher\": \"Voucher F&B 25.000\", \"keterangan\": \"no terms and conditions\", \"image\": \"https://i.pinimg.com/564x/7b/02/95/7b0295acfb67436930bcd5034c965e96.jpg\", \"harga_point\": 25000, \"harga_rupiah\": 25000, \"expired\": \"2023-01-09T10:18:46\", \"expirederdem\": 7, \"quota\": 1000, \"merchant\": 1, \"status\": 1 }, { \"idmastervoucher\": 2, \"namavoucher\": \"Voucher F&B 20.000\", \"keterangan\": \"S&K. minimum pembelanjaan 50ribu dan wajib purchase durasi waktu minimal 30 menit\", \"image\": \"https://i.pinimg.com/564x/55/0c/7f/550c7f5e5201687fef9c5a4ccc3730e7.jpg\", \"harga_point\": 20000, \"harga_rupiah\": 20000, \"expired\": \"2023-01-09T15:20:52\", \"expirederdem\": 7, \"quota\": 1000, \"merchant\": 1, \"status\": 1 } ] } }","title":"Result GET Method"},{"location":"system/voucher/mastervoucher/location/","text":"Master Voucher > Location Endpoint [GET] url/master_voucher/location/ Result { \"message\": \"successfully\", \"results\": { \"master\": [ { \"id\": 1, \"code\": \"Posbloc\", \"location\": \"PSBL\", \"label\": \"PSBL\", \"value\": \"Posbloc\" } ], \"status\": true } }","title":"Location"},{"location":"system/voucher/mastervoucher/location/#master-voucher-location","text":"","title":"Master Voucher &gt; Location"},{"location":"system/voucher/mastervoucher/location/#endpoint","text":"[GET] url/master_voucher/location/","title":"Endpoint"},{"location":"system/voucher/mastervoucher/location/#result","text":"{ \"message\": \"successfully\", \"results\": { \"master\": [ { \"id\": 1, \"code\": \"Posbloc\", \"location\": \"PSBL\", \"label\": \"PSBL\", \"value\": \"Posbloc\" } ], \"status\": true } }","title":"Result"},{"location":"user/login/login_by_google/","text":"Sign In by Google Endpoint [GET] url/user/email/?email=(confidential data) GET Method Use email as params for sign in by google. Result { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"status\": 9, \"username\": \"(confidential data)\", \"id\": 2, \"email\": \"(confidential data)\", \"details\": [ { \"id\": 2, \"reward\": 0, \"point\": 65, \"coin\": 40, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 1, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null, \"iduser_id\": [ { \"id_up\": 1, \"id\": 2, \"profile\": \"media/profile/user.png\" } ] } ] } }","title":"Sign In by Google"},{"location":"user/login/login_by_google/#sign-in-by-google","text":"","title":"Sign In by Google"},{"location":"user/login/login_by_google/#endpoint","text":"[GET] url/user/email/?email=(confidential data)","title":"Endpoint"},{"location":"user/login/login_by_google/#get-method","text":"Use email as params for sign in by google.","title":"GET Method"},{"location":"user/login/login_by_google/#result","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"status\": 9, \"username\": \"(confidential data)\", \"id\": 2, \"email\": \"(confidential data)\", \"details\": [ { \"id\": 2, \"reward\": 0, \"point\": 65, \"coin\": 40, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 1, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null, \"iduser_id\": [ { \"id_up\": 1, \"id\": 2, \"profile\": \"media/profile/user.png\" } ] } ] } }","title":"Result"},{"location":"user/login/sign_in/","text":"Sign In Endpoint [POST] url/user/login POST Method Use this json file with the format below to sign in. { \"username\": \"(confidential data)\", \"password\": \"(confidential data)\" } Result { \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY3MTg2OTU3NCwianRpIjoiNTRmMDAyOTA2ODkzNGRiMmE1YjM5YjRkYzEwZTdjYjEiLCJ1c2VyX2lkIjoyfQ.yz6zHw7gHud2qPvt-rHzqzTFiSvP71N4uhfhm1IzsCw\", \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjcxNzgzNDc0LCJqdGkiOiJjNmU5ZDkwMzQxOGQ0YzYyOGQ3YTdjZDU1NTYzZTk0YSIsInVzZXJfaWQiOjJ9.QVEYvsmdbOgF1vlapuHsID07J_raYy_bmZU-Qi6OPnk\", \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjcyNjQ3MTc0LCJqdGkiOiIyMDI1NDZkNjA5NzY0NWUxOWU2ZTg0MjY2OTZhYzM2NSIsInVzZXJfaWQiOjJ9.QIi_-6A7QoNBvFQKU_ALJN3yTebe7ED6YwRebvUb_E8\", \"username\": \"(confidential data)\", \"is_superuser\": false, \"is_staff\": false, \"id\": 2, \"firstName\": \"-\", \"lastName\": \"-\", \"email\": \"(confidential data)\", \"password\": \"pbkdf2_sha256$260000$mY0q9uMsBOv1c2YalSlucT$jWl1dq9nSw+erRuqCQp1b/TIwJNl/+9hX06qFbPCCXo=\", \"is_active\": true, \"details\": [ { \"id\": 2, \"reward\": 0, \"point\": 0, \"coin\": 0, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 0, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null, \"iduser_id\": [ { \"id_up\": 1, \"id\": 2, \"profile\": \"media/profile/user.png\" } ] } ] }","title":"Sign In"},{"location":"user/login/sign_in/#sign-in","text":"","title":"Sign In"},{"location":"user/login/sign_in/#endpoint","text":"[POST] url/user/login","title":"Endpoint"},{"location":"user/login/sign_in/#post-method","text":"Use this json file with the format below to sign in. { \"username\": \"(confidential data)\", \"password\": \"(confidential data)\" }","title":"POST Method"},{"location":"user/login/sign_in/#result","text":"{ \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY3MTg2OTU3NCwianRpIjoiNTRmMDAyOTA2ODkzNGRiMmE1YjM5YjRkYzEwZTdjYjEiLCJ1c2VyX2lkIjoyfQ.yz6zHw7gHud2qPvt-rHzqzTFiSvP71N4uhfhm1IzsCw\", \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjcxNzgzNDc0LCJqdGkiOiJjNmU5ZDkwMzQxOGQ0YzYyOGQ3YTdjZDU1NTYzZTk0YSIsInVzZXJfaWQiOjJ9.QVEYvsmdbOgF1vlapuHsID07J_raYy_bmZU-Qi6OPnk\", \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjcyNjQ3MTc0LCJqdGkiOiIyMDI1NDZkNjA5NzY0NWUxOWU2ZTg0MjY2OTZhYzM2NSIsInVzZXJfaWQiOjJ9.QIi_-6A7QoNBvFQKU_ALJN3yTebe7ED6YwRebvUb_E8\", \"username\": \"(confidential data)\", \"is_superuser\": false, \"is_staff\": false, \"id\": 2, \"firstName\": \"-\", \"lastName\": \"-\", \"email\": \"(confidential data)\", \"password\": \"pbkdf2_sha256$260000$mY0q9uMsBOv1c2YalSlucT$jWl1dq9nSw+erRuqCQp1b/TIwJNl/+9hX06qFbPCCXo=\", \"is_active\": true, \"details\": [ { \"id\": 2, \"reward\": 0, \"point\": 0, \"coin\": 0, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 0, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null, \"iduser_id\": [ { \"id_up\": 1, \"id\": 2, \"profile\": \"media/profile/user.png\" } ] } ] }","title":"Result"},{"location":"user/login/sign_up/","text":"Sign Up Endpoint [POST] url/user/user POST Method Use this json file with the format below to sign up. { \"first_name\": \"-\", \"last_name\": \"-\", \"username\": \"(confidential data)\", \"email\": \"(confidential data)\", \"phone_number\": \"(confidential data)\", \"password\": \"(confidential data)\", \"password2\": \"(confidential data)\", \"pin\": \"\", \"referral_code\" : \"(confidential data)\" } Result { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"master\": [ { \"id\": 2, \"reward\": 0, \"point\": 0, \"coin\": 0, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 0, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null } ] } } Error condition If email format doesn't match. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"Username is already registered\" } If password doesn't match. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"Password Minimum 8 Character\" } If username has been registered. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"Username is already registered\" } If email has been registered. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"Email is already registered\" }","title":"Register"},{"location":"user/login/sign_up/#sign-up","text":"","title":"Sign Up"},{"location":"user/login/sign_up/#endpoint","text":"[POST] url/user/user","title":"Endpoint"},{"location":"user/login/sign_up/#post-method","text":"Use this json file with the format below to sign up. { \"first_name\": \"-\", \"last_name\": \"-\", \"username\": \"(confidential data)\", \"email\": \"(confidential data)\", \"phone_number\": \"(confidential data)\", \"password\": \"(confidential data)\", \"password2\": \"(confidential data)\", \"pin\": \"\", \"referral_code\" : \"(confidential data)\" }","title":"POST Method"},{"location":"user/login/sign_up/#result","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"master\": [ { \"id\": 2, \"reward\": 0, \"point\": 0, \"coin\": 0, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 0, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null } ] } }","title":"Result"},{"location":"user/login/sign_up/#error-condition","text":"If email format doesn't match. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"Username is already registered\" } If password doesn't match. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"Password Minimum 8 Character\" } If username has been registered. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"Username is already registered\" } If email has been registered. { \"message\": \"unsuccessfully\", \"status\": false, \"count\": 1, \"results\": \"Email is already registered\" }","title":"Error condition"},{"location":"user/login/uploadprofpic/","text":"Upload Profile Picture Endpoint [POST] url/user/upload/ [GET] url/user/upload/ POST Method for POST method, add this in params . Result POST Method { \"Status\": true, \"message\": \"Image upload successfully\", \"results\": { \"id_up\": 1, \"id\": 2, \"profile\": \"http://(confidential data)/user/upload/media/profile/user.png\" } } Result GET Method { \"status\": true, \"message\": \"Successfully\", \"results\": [ { \"id_up\": 1, \"id\": 2, \"profile\": \"media/profile/user.png\" } ] }","title":"Upload Profile Picture"},{"location":"user/login/uploadprofpic/#upload-profile-picture","text":"","title":"Upload Profile Picture"},{"location":"user/login/uploadprofpic/#endpoint","text":"[POST] url/user/upload/ [GET] url/user/upload/","title":"Endpoint"},{"location":"user/login/uploadprofpic/#post-method","text":"for POST method, add this in params .","title":"POST Method"},{"location":"user/login/uploadprofpic/#result-post-method","text":"{ \"Status\": true, \"message\": \"Image upload successfully\", \"results\": { \"id_up\": 1, \"id\": 2, \"profile\": \"http://(confidential data)/user/upload/media/profile/user.png\" } }","title":"Result POST Method"},{"location":"user/login/uploadprofpic/#result-get-method","text":"{ \"status\": true, \"message\": \"Successfully\", \"results\": [ { \"id_up\": 1, \"id\": 2, \"profile\": \"media/profile/user.png\" } ] }","title":"Result GET Method"},{"location":"user/update/activation/","text":"Activation Account Endpoint [GET] url/user/getactivation/?user=anonim12 [PUT] url/user/activation/ GET Method For GET method, use user as params . PUT Method For PUT method, use this json file with the format below to activation account. { \"username\": \"(confidential data)\", \"codeuser\": \"(confidential data)\", \"phone_number\": \"(confidential data)\" } Result GET Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"master\": [ { \"id\": 2, \"phone_number\": \"(confidential data)\", \"code\": (confidential data), \"status\": 0 } ], \"detail\": [ { \"id\": 2, \"username\": \"(confidential data)\", \"email\": \"(confidential data)\", \"is_active\": true } ] } } Result PUT Method { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"master\": [ { \"id\": 2, \"reward\": 0, \"point\": 0, \"coin\": 0, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 1, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null } ], \"message_refferal\": false } }","title":"Activation Account"},{"location":"user/update/activation/#activation-account","text":"","title":"Activation Account"},{"location":"user/update/activation/#endpoint","text":"[GET] url/user/getactivation/?user=anonim12 [PUT] url/user/activation/","title":"Endpoint"},{"location":"user/update/activation/#get-method","text":"For GET method, use user as params .","title":"GET Method"},{"location":"user/update/activation/#put-method","text":"For PUT method, use this json file with the format below to activation account. { \"username\": \"(confidential data)\", \"codeuser\": \"(confidential data)\", \"phone_number\": \"(confidential data)\" }","title":"PUT Method"},{"location":"user/update/activation/#result-get-method","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"master\": [ { \"id\": 2, \"phone_number\": \"(confidential data)\", \"code\": (confidential data), \"status\": 0 } ], \"detail\": [ { \"id\": 2, \"username\": \"(confidential data)\", \"email\": \"(confidential data)\", \"is_active\": true } ] } }","title":"Result GET Method"},{"location":"user/update/activation/#result-put-method","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": { \"master\": [ { \"id\": 2, \"reward\": 0, \"point\": 0, \"coin\": 0, \"phone_number\": \"(confidential data)\", \"pin\": \"(confidential data)\", \"code\": (confidential data), \"status\": 1, \"count_referal\": 0, \"idgetplus\": \"0\", \"membergetplus\": \"0\", \"extradata\": null } ], \"message_refferal\": false } }","title":"Result PUT Method"},{"location":"user/update/changepass/","text":"Change Password Endpoint [PUT] url/user/changepassword/ PUT Method For PUT method, use this json file with the format below to change password. { \"id\": \"2\", \"password\": \"(confidential data)\" } Result { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": \"Change Password Success\" }","title":"Change Password"},{"location":"user/update/changepass/#change-password","text":"","title":"Change Password"},{"location":"user/update/changepass/#endpoint","text":"[PUT] url/user/changepassword/","title":"Endpoint"},{"location":"user/update/changepass/#put-method","text":"For PUT method, use this json file with the format below to change password. { \"id\": \"2\", \"password\": \"(confidential data)\" }","title":"PUT Method"},{"location":"user/update/changepass/#result","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": \"Change Password Success\" }","title":"Result"},{"location":"user/update/changephonenumber/","text":"Change Phone Number Endpoint [PUT] url/user/changephonenumber/ PUT Method For PUT method, use this json file with the format below to change phone number. { \"username\": \"(confidential data)\", \"phone_number\": \"(confidential data)\" } Result { \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": \"User has been change phone number\" }","title":"Change Phone Number"},{"location":"user/update/changephonenumber/#change-phone-number","text":"","title":"Change Phone Number"},{"location":"user/update/changephonenumber/#endpoint","text":"[PUT] url/user/changephonenumber/","title":"Endpoint"},{"location":"user/update/changephonenumber/#put-method","text":"For PUT method, use this json file with the format below to change phone number. { \"username\": \"(confidential data)\", \"phone_number\": \"(confidential data)\" }","title":"PUT Method"},{"location":"user/update/changephonenumber/#result","text":"{ \"message\": \"successfully\", \"status\": true, \"count\": 1, \"results\": \"User has been change phone number\" }","title":"Result"}]}